<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xiaoai7904.github.io/</id>
    <title>xiaoai</title>
    <updated>2020-08-16T08:43:23.535Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://xiaoai7904.github.io/"/>
    <link rel="self" href="https://xiaoai7904.github.io/atom.xml"/>
    <subtitle>记录美好生活</subtitle>
    <logo>https://xiaoai7904.github.io/images/avatar.png</logo>
    <icon>https://xiaoai7904.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, xiaoai</rights>
    <entry>
        <title type="html"><![CDATA[MySql常用命令和介绍]]></title>
        <id>https://xiaoai7904.github.io/post/mysql-chang-yong-ming-ling-he-jie-shao/</id>
        <link href="https://xiaoai7904.github.io/post/mysql-chang-yong-ming-ling-he-jie-shao/">
        </link>
        <updated>2020-08-16T07:41:28.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript Promis]]></title>
        <id>https://xiaoai7904.github.io/post/javascript-promis/</id>
        <link href="https://xiaoai7904.github.io/post/javascript-promis/">
        </link>
        <updated>2020-08-09T01:10:12.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[浏览器缓存机制详解]]></title>
        <id>https://xiaoai7904.github.io/post/liu-lan-qi-huan-cun-ji-zhi-xiang-jie/</id>
        <link href="https://xiaoai7904.github.io/post/liu-lan-qi-huan-cun-ji-zhi-xiang-jie/">
        </link>
        <updated>2019-12-17T06:04:34.000Z</updated>
        <summary type="html"><![CDATA[<p>在前端开发中,一个比较重要环节性能优化,然而利用浏览器缓存是性能优化中简单高效的一种优化方式了,一个优秀的缓存策略可以缩短网页请求资源的距离，减少延迟，并且由于缓存文件可以重复利用，还可以减少带宽，降低网络负荷</p>
]]></summary>
        <content type="html"><![CDATA[<p>在前端开发中,一个比较重要环节性能优化,然而利用浏览器缓存是性能优化中简单高效的一种优化方式了,一个优秀的缓存策略可以缩短网页请求资源的距离，减少延迟，并且由于缓存文件可以重复利用，还可以减少带宽，降低网络负荷</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[函数节流和防抖]]></title>
        <id>https://xiaoai7904.github.io/post/han-shu-jie-liu-he-fang-dou/</id>
        <link href="https://xiaoai7904.github.io/post/han-shu-jie-liu-he-fang-dou/">
        </link>
        <updated>2019-12-11T03:08:03.000Z</updated>
        <summary type="html"><![CDATA[<p>日常开发中会遇到很多事件执行频率很大比如:<br>
resize、scroll、mousedown、mousemove...<br>
执行频率越多，对应函数执行次数增多，通过引入<code>节流</code>和<code>防抖</code>可以有效解决这一问题</p>
]]></summary>
        <content type="html"><![CDATA[<p>日常开发中会遇到很多事件执行频率很大比如:<br>
resize、scroll、mousedown、mousemove...<br>
执行频率越多，对应函数执行次数增多，通过引入<code>节流</code>和<code>防抖</code>可以有效解决这一问题</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[JSON.stringify和JSON.parse]]></title>
        <id>https://xiaoai7904.github.io/post/jsonstringify-he-jsonparse/</id>
        <link href="https://xiaoai7904.github.io/post/jsonstringify-he-jsonparse/">
        </link>
        <updated>2019-12-09T01:55:19.000Z</updated>
        <summary type="html"><![CDATA[<p>在日常开发中，我们会使用到<code>JSON.stringify</code>和<code>JSON.parse</code>对json数据进行转换,也可以通过这两个方法进行数据深度拷贝</p>
]]></summary>
        <content type="html"><![CDATA[<p>在日常开发中，我们会使用到<code>JSON.stringify</code>和<code>JSON.parse</code>对json数据进行转换,也可以通过这两个方法进行数据深度拷贝</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Service Worker]]></title>
        <id>https://xiaoai7904.github.io/post/service-worker/</id>
        <link href="https://xiaoai7904.github.io/post/service-worker/">
        </link>
        <updated>2019-11-24T23:29:07.000Z</updated>
        <summary type="html"><![CDATA[<p>丰富的离线体验、定期的后台同步以及推送通知等通常需要将面向本机应用的功能将引入到网页应用中。 Service Worker 提供所有这些功能所依赖的技术基础。</p>
]]></summary>
        <content type="html"><![CDATA[<p>丰富的离线体验、定期的后台同步以及推送通知等通常需要将面向本机应用的功能将引入到网页应用中。 Service Worker 提供所有这些功能所依赖的技术基础。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS BEM书写规]]></title>
        <id>https://xiaoai7904.github.io/post/css-bem-shu-xie-gui/</id>
        <link href="https://xiaoai7904.github.io/post/css-bem-shu-xie-gui/">
        </link>
        <updated>2019-11-24T02:27:51.000Z</updated>
        <summary type="html"><![CDATA[<p><code>BEM</code>的意思就是块（<code>block</code>）、元素（<code>element</code>）、修饰符（<code>modifier</code>）,是由<a href="https://yandex.ru/">Yandex</a>团队提出的一种前端命名方法论。这种巧妙的命名方法让你的CSS类对其他开发者来说更加透明而且更有意义。BEM命名约定更加严格，而且包含更多的信息，它们用于一个团队开发一个耗时的大项目</p>
]]></summary>
        <content type="html"><![CDATA[<p><code>BEM</code>的意思就是块（<code>block</code>）、元素（<code>element</code>）、修饰符（<code>modifier</code>）,是由<a href="https://yandex.ru/">Yandex</a>团队提出的一种前端命名方法论。这种巧妙的命名方法让你的CSS类对其他开发者来说更加透明而且更有意义。BEM命名约定更加严格，而且包含更多的信息，它们用于一个团队开发一个耗时的大项目</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端大杂烩]]></title>
        <id>https://xiaoai7904.github.io/post/qian-duan-da-za-hui/</id>
        <link href="https://xiaoai7904.github.io/post/qian-duan-da-za-hui/">
        </link>
        <updated>2019-11-24T02:27:01.000Z</updated>
        <summary type="html"><![CDATA[<p>整理目前github上面比较优秀和热门的项目,文章，方便查看和学习</p>
]]></summary>
        <content type="html"><![CDATA[<p>整理目前github上面比较优秀和热门的项目,文章，方便查看和学习</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[vue源码解析,自己动手实现miniVue]]></title>
        <id>https://xiaoai7904.github.io/post/vue-yuan-ma-jie-xi-zi-ji-dong-shou-shi-xian-minivue/</id>
        <link href="https://xiaoai7904.github.io/post/vue-yuan-ma-jie-xi-zi-ji-dong-shou-shi-xian-minivue/">
        </link>
        <updated>2019-11-24T02:18:35.000Z</updated>
        <summary type="html"><![CDATA[<p>通过对<code>Vue</code>源码进行阅读,自己动手实现<code>miniVue</code>框架</p>
]]></summary>
        <content type="html"><![CDATA[<p>通过对<code>Vue</code>源码进行阅读,自己动手实现<code>miniVue</code>框架</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Async Function]]></title>
        <id>https://xiaoai7904.github.io/post/async-function/</id>
        <link href="https://xiaoai7904.github.io/post/async-function/">
        </link>
        <updated>2019-11-24T01:28:21.000Z</updated>
        <summary type="html"><![CDATA[<p>Chrome 55 中默认情况下启用异步函数，坦率地讲，它们的作用相当不可思议。 可以利用它们像编写同步代码那样编写基于 Promise 的代码，而且还不会阻塞主线程。 它们可以让异步代码“智商”下降、可读性提高。</p>
]]></summary>
        <content type="html"><![CDATA[<p>Chrome 55 中默认情况下启用异步函数，坦率地讲，它们的作用相当不可思议。 可以利用它们像编写同步代码那样编写基于 Promise 的代码，而且还不会阻塞主线程。 它们可以让异步代码“智商”下降、可读性提高。</p>
]]></content>
    </entry>
</feed>